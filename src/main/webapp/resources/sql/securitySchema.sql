/*spring security ddl*/

use spring;

DROP TABLE ROLES_HIERARCHY;

DROP TABLE AUTHORITIES;

DROP TABLE ROLES;

DROP TABLE USERS;


CREATE TABLE USERS (
   USER_ID VARCHAR(20) NOT NULL PRIMARY KEY,
   PASSWORD VARCHAR(100) NOT NULL,
   ENABLED BOOLEAN NOT NULL,
   USER_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE ROLES (
   AUTHORITY VARCHAR(50) NOT NULL PRIMARY KEY,
   ROLE_NAME VARCHAR(50)
);

CREATE TABLE AUTHORITIES (
   USER_ID VARCHAR(20) NOT NULL,
   AUTHORITY VARCHAR(50) NOT NULL,
   PRIMARY KEY(USER_ID, AUTHORITY),
   FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
   FOREIGN KEY(AUTHORITY) REFERENCES ROLES(AUTHORITY)
);

CREATE TABLE ROLES_HIERARCHY (
   PARENT_ROLE VARCHAR(50) NOT NULL,
   CHILD_ROLE VARCHAR(50) NOT NULL,
   PRIMARY KEY(PARENT_ROLE, CHILD_ROLE),
   FOREIGN KEY(PARENT_ROLE) REFERENCES ROLES(AUTHORITY),
   FOREIGN KEY(CHILD_ROLE) REFERENCES ROLES(AUTHORITY)
);


/*
	admin : spring
	user : security
*/

Insert into USERS (USER_ID,USER_NAME,PASSWORD,ENABLED) values ('admin','Admin.','622a494d3ea8c7ba2fed4f37909f14d9b50ab412322de39be62c8d6c2418bfca',true);
Insert into USERS (USER_ID,USER_NAME,PASSWORD,ENABLED) values ('user','User','5d2d3ceb7abe552344276d47d36a8175b7aeb250a9bf0bf00e850cd23ecf2e43',true);
Insert into ROLES (AUTHORITY,ROLE_NAME) values ('ROLE_ADMIN','Administrator Role');
Insert into ROLES (AUTHORITY,ROLE_NAME) values ('ROLE_USER','Public user');
Insert into ROLES (AUTHORITY,ROLE_NAME) values ('ROLE_RESTRICTED','Restricted user');
Insert into AUTHORITIES (USER_ID,AUTHORITY) values ('admin','ROLE_ADMIN');
Insert into AUTHORITIES (USER_ID,AUTHORITY) values ('user','ROLE_USER');
Insert into ROLES_HIERARCHY (PARENT_ROLE,CHILD_ROLE) values ('ROLE_RESTRICTED','ROLE_USER');
Insert into ROLES_HIERARCHY (PARENT_ROLE,CHILD_ROLE) values ('ROLE_USER','ROLE_ADMIN');

/* ROLES_HIERARCHY 상속구조관계 정의 예를들어 ROLE_ADMIN 권한을 가진 사용자는 당연히 ROLE_USER 권한도 가지게 된다.*/
SELECT * FROM ROLES_HIERARCHY;

SELECT * FROM AUTHORITIES;

SELECT * FROM ROLES;

SELECT * FROM USERS;

SELECT USER_ID, PASSWORD, ENABLED, USER_NAME FROM USERS WHERE USER_ID = 'user';

commit;
