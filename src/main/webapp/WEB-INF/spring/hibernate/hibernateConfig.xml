<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	
	   
	<bean id="dsHibernate" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="resourceRef" value="true" />
		<property name="jndiName" value="jndi/hibernate" />
	</bean>
	  
	  <!-- 
	 <bean id="dsHibernate" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.pass}"/>
    </bean> 
	    -->
	 <!-- jndi 사용시 lazy-init=true를 반드시 줘야 드라이버 클래스를 로딩할 수 있다. -->
	<!-- sessionFactory 사용할 경우 -->	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dsHibernate"></property>  
		<property name="packagesToScan" value="www.spring.security.model"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.globally_quoted_identifiers">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.internal.NoCachingRegionFactory</prop>
				<prop key="hibernate.current_session_context_class">org.hibernate.context.internal.ThreadLocalSessionContext</prop> 
				 <!-- 
				<prop key="hibernate.current_session_context_class">thread</prop>
				 -->
				<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath:www/spring/security/hibernate/xml/**/*.xml</value>
			</list>
		</property>
	</bean>	
	
	<!-- 
		Hibernate3 -> Hibernate4

		org.hibernate.transaction.JDBCTransactionFactory
		org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory

		org.hibernate.transaction.JTATransactionFactory
		org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory

		org.hibernate.transaction.CMTTransactionFactory
		org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory
	 -->

		<!--
		* Common DAO Bean 
 		* Autowired 로 삽입 (가독성을 위하여 명시함)
	-->		
	<bean id="baseDao" class="www.spring.security.common.hibernate.dao.impl.HibernateBaseDao"> <!-- DynamicSqlMapClient use -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>	
	

	 <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	 
		<!-- 현제 에러 나는거 transactionManager 설정부터 하고 들어 가 볼 것 -->
		
		
		<!-- 트랜잭션 관련 설정 -->
		
		<import resource="./hibernate-jta.xml"/>
		 
		
	</beans>