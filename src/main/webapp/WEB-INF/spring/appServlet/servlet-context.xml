<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop
       	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	  
	
	
	<!-- url이름으로 컨트롤러와 매핑 일단 간단히 구현하기 위하여 사용.. -->
	<!-- 아래 ControllerClassNameHandlerMapping 3.0.x 때는 잘 동작하는데 3.1.x부터는 이상하게 안된다...뭔가 설정이 바뀐거 같은데... -->
	<!-- 
	<beans:bean id="urlMapping" class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<beans:property name="order" value="0"></beans:property>
	</beans:bean>
	  -->
	  <!-- aspectj 사용하기 위해서는 아래 aop설정 빈 기입해야함. -->
	<aop:aspectj-autoproxy />
	
	<!-- 로그관련 aop -->
	<beans:bean id="log" class="www.spring.security.common.module.LogWriter"></beans:bean>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 파일업로드 DTO부분에다가 MultipartFile 사용 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="104857600"></beans:property>
		<beans:property name="maxInMemorySize" value="10485760"></beans:property>
	</beans:bean>
	
	
	
	<!-- 차후 타일즈 Or 사이트메쉬 와 연동 contentnegotiatingviewresolver-->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></beans:property>
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
		<!-- View Resolver  해당 bean을 등록해야 Action class 에서 View 영역 호출이 가능 --> 
	<beans:bean id="beanNameVie0wResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"></beans:property>
	</beans:bean>
	
	<!-- mysql에 바이너리파일을 바로 넣기위해서는 해당빈을 등록해야 한다 -->
	<beans:bean class="org.springframework.jdbc.support.lob.DefaultLobHandler"></beans:bean>
	
	<mvc:view-controller path="/login.html" view-name="masterLogin" />
	<mvc:view-controller path="/logout.html" view-name="logout" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/item/index.html"/>
	        <beans:bean class="www.spring.security.common.module.CheckInterecptor"></beans:bean>
	    </mvc:interceptor>
	</mvc:interceptors>
	
	
	<context:component-scan base-package="www.spring.security" />
	
	
	
</beans:beans>
